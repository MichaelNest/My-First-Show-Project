1) Create git repository; add LICENSE (Apach 2.0); add .gitignore for Python
2) Come in my projects folder and: 
	git clone 'copy address my repository'
3) If my computer system does not have pipenv - install:
	sudo apt install pipenv
4) go to project-folder and create virtual environment there with python 3.8.*:
	pipenv --python 3.8 
5) pipenv --venv --- looking at adress directory with venv
6) pipenv install django==3.0.9
7) pipenv install --- install at all from Pipfile-file (if it needs)
8) pipenv install --dev black==20.8b1 --- install application for format code
9) pipenv run django-admin startproject core
10) mv core src --- rename exterman folder from 'core' to 'src'
11) git status; git add --all; git status; git commit -m 'commit text'; git push origin master
12) heroku git:remote -a my-first-show-project --- register git-repository with heroku-repository
13) heroku-project/settings/config_vars/DISABLE_COLLECTSTATIC=1 --- disabled staticfiles
14) Create file Procfile, add string: web: pipenv run python src/manage.py runserver 0.0.0.0:$PORT
15) Add hosts to ALLOWED_HOSTS
16) heroku logs --tail --- show logs
17) !!! heroku server get started, when remove words 'pipenv run' in Procfile
-----------------------------------------------------------------------------------------------------------------
18) Create app for users:
    ('pipenv run' or 'pipenv shell' ) python manage.py startapp users
19) Add to settings.py field AUTH_USER_MODEL = 'users.CustomUser'
20) Add to users/models.py class CustomUser(AbstractUser)
21) Create file users/forms.py and add classes CustomUserCreationForm and CustomUserChangeForm
22) Setting file users/admin.py
23) Create makemigrations and migrate
24) Create Superuser
25) Create folder 'templates/registration'
26) Add to settings.py fields LOGIT_REDIRECT_URL and LOGOUT_REDIRECT_URL
26) Create files base.html, home.html, signup.html and registration/login.html
------------------------------------------------------------------------------------------------------------------
27) Setting file core/urls.py
28) Create and setting file users/urls.py
29) Setting file users/views.py, create class Signup(CreateView)
30) Change field 'fields' in file users/forms.py - add to form 'email'-field
------------------------------------------------------------------------------------------------------------------
31) Create app Pages for static-pages
32) Change core/urls.py (include('pages.urls')); Create file pages/urls.py;
Create class HomePageView() in pages/views.py.
------------------------------------------------------------------------------------------------------------------
33) Change file base.html - add Bootstrap,
34) In file settings.py add STATICFILES_DIRS
35) Create directory 'static/css', create file base.css, add base.css to base.html
------------------------------------------------------------------------------------------------------------------
36) Create directory 'templates/includes', create file includes/navbar.html
37) Include navbar.html to base.html
------------------------------------------------------------------------------------------------------------------
38) Install library Crispy: pipenv install django-crispy-forms
39) Add to settings.py to INSTALLED_APPS=[..., 'crispy_forms',...] and CRISPY_TEMPLATE_PACK = 'bootstrap4'
40) Add to users/signup.html {% load crispy_forms_tags %} and {{ form|crispy }} instead of {{ form.as_p }}
------------------------------------------------------------------------------------------------------------------
41) Create files registration/password_change_form.html and registration/password_change_done.html
42) Add form password_change to password_change.html and successfull-text to password_change_done.html
------------------------------------------------------------------------------------------------------------------
43) Create and setting files registration/password_reset_form.html, password_reset_donem.html,
password_reset_confirm.html, password_reset_complate.html
------------------------------------------------------------------------------------------------------------------
44) Install library python-dotenv: pipenv install python-dotenv
45) Create file .env, add to it fields EMAIL_HOST_USER and EMAIL_HOST_PASSWORD
46) Import to settings.py 'from dotenv import load_dotenv' and override EMAIL_HOST_USER and EMAIL_HOST_PASSWORD
47) 0pen access for application in settings gmail-account
48) Create file templates/registration/password_reset_email.html and password_reset_subject.txt for change text of letter
------------------------------------------------------------------------------------------------------------------
49) Create application Articles
50) Add settings to settings.py
51) Create class Article in file articles/models.py and make migrations
------------------------------------------------------------------------------------------------------------------
52) Set file articles/admin.py.
------------------------------------------------------------------------------------------------------------------
53) Make include-record to core/urls.py
54) Create file articles/urls.py
55) Create class ArticleListView(ListView) in file article/views.py
56) Create and set file templates/articles/article_list.html
------------------------------------------------------------------------------------------------------------------
57) Set file articles/urls.py for detail, update, delete
58) Create classes ArticleDetailView, ArticleUpdateView and ArticleDeleteView in file articles/views.py
59) Create article_detail.html, article_edit.html and article_delete.html
------------------------------------------------------------------------------------------------------------------
60) Create url, view and template article_new.html for create new articles
------------------------------------------------------------------------------------------------------------------
61) Set article/views.py class ArticleCreateView() - add def form_valid and remove 'author' - by create new article
- author will add automaticly.
62) Import to articles/views.py class python.contrib.auth.mixins - LoginRequiredMixin, ass it to class ArticleCreateView,
and add field login_url='login'. - create articles can only autentificate user - go to login-page.
63) Add LoginRequiredMixin and login_url to other classes articles/views.py
------------------------------------------------------------------------------------------------------------------
64) Create model Comment in file articles/models.py
65) Create makemigrations articles/migrate
------------------------------------------------------------------------------------------------------------------
66) Set file articles/admin.py for show comments in adminpanel (admin.StackedInLine and admin.TabularInLine)
------------------------------------------------------------------------------------------------------------------
67) Add to articles/models.py/Comment/article - related_name='comments'
------------------------------------------------------------------------------------------------------------------
68) Change templates article_list.html and article_detail.html for show comments count and comments
------------------------------------------------------------------------------------------------------------------
69) Create operation-set for showing MEDIA-files
------------------------------------------------------------------------------------------------------------------
70) Make operation-set for create pagination
------------------------------------------------------------------------------------------------------------------
71) Make operation-set for create footer
------------------------------------------------------------------------------------------------------------------
72) Make comments, version_1
------------------------------------------------------------------------------------------------------------------
73) Make favicon adress string, make navbar logo
------------------------------------------------------------------------------------------------------------------
75) Edit front-view, add logo, add icon, edit parameters of comment-form
------------------------------------------------------------------------------------------------------------------
76) Install Dinaconf: pipenv install dynaconf[yaml]; create .env, config;
create config/settings.yaml and config/.secrets.yaml; add fields to config/settings.yaml; add fields to config/.secrets.yaml;
77) Command 'dynaconf list' - show my dynaconf-settings 'development'
78) ENV_FOR_DYNACONF=default (development); dynaconf list --- show my dynaconf-settings 'default'('development')
79) For change any field - should use prefix MYSITE (from file .env/ENVVAR_PREFIX_FOR_DYNACONF=MYSITE)
    --- MYSITE_DATABASE_URL=1234567890
80) Turn off .env in file .gitignore, add to git files .env and config/settings.yaml, add to .gitignore (**/secrets.*) file secrets.yaml
81) Add to heroku/settings/config_var: MYSITE_SECRET_KEY='....', ENV_FOR_DYNACONF = heroku, and secret vars for post_server
------------------------------------------------------------------------------------------------------------------
82) Install PostgresSQL: sudo apt update | sudo apt install postgresql postgresql-contrib
83) sudo -i -u postgres | sudo -u postgres psql --- enter to postgres | 'exit' - out
84) psql / psql -d postgres --- bd postgres | \q - out | \l - watch list of bd
85) sudo -u postgres psql --- create my new database with name 'my_site'
86) psql -d my_site - enter to my db 'my_site', \d - watch tables in db (\dt)
87) pipenv install dj-database-url --- install dj-database-url
88) DATABASES = {'default': dj_database_url.parse(db_url, conn_max_age=600)} - add my_base
89) Install driver for Django-Postgres --- psycopg2-binary: pipenv install psycopg2-binary
90) Create password for role 'postgres', command --- \password
91) Add to secrets.yaml to DATABASE_URL: DATABASE_URL = '"postgresql://name_role:password_role@localhost:5432/my_db_name"'
92) create user author with login password 'qwerty'; --- create new user(role) with password
93) create database my_new_db --- create new database
------------------------------------------------------------------------------------------------------------------
